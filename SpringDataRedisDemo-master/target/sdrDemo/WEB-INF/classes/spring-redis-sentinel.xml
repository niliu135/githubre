<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:aop="http://www.springframework.org/schema/aop"  
        xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">  
      
        <!-- Spring自动将该包目录下标记为@Service的所有类作为spring的Bean -->  
        <context:component-scan base-package="com.moui.test" />  
      
    <!--     <context:property-placeholder location="classpath:conf/redis/redis.properties" /> -->  
      
        <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
            <property name="maxTotal" value="50" />  
            <property name="maxIdle" value="10" />  
            <property name="numTestsPerEvictionRun" value="10" />  
            <property name="timeBetweenEvictionRunsMillis" value="30000" />  
            <property name="minEvictableIdleTimeMillis" value="-1" />  
            <property name="softMinEvictableIdleTimeMillis" value="10000" />  
            <property name="maxWaitMillis" value="1500" />  
            <property name="testOnBorrow" value="true" />  
            <property name="testWhileIdle" value="true" />  
            <property name="testOnReturn" value="false" />  
            <property name="jmxEnabled" value="true" />  
            <property name="blockWhenExhausted" value="false" />  
        </bean>  
      
        <bean id="redisSentinelConfiguration"  
            class="org.springframework.data.redis.connection.RedisSentinelConfiguration">  
            <property name="master">  
                <bean class="org.springframework.data.redis.connection.RedisNode">  
                    <property name="name" value="mymaster">  
                    </property>  
                </bean>  
            </property>  
            <property name="sentinels">  
                <set>  
                    <bean class="org.springframework.data.redis.connection.RedisNode">  
                        <constructor-arg name="host" value="192.168.75.134" />  
                        <constructor-arg name="port" value="26379" />  
                    </bean>  
                    <bean class="org.springframework.data.redis.connection.RedisNode">  
                        <constructor-arg name="host" value="192.168.75.134" />  
                        <constructor-arg name="port" value="26380" />  
                    </bean>  
                    <bean class="org.springframework.data.redis.connection.RedisNode ">  
                        <constructor-arg name="host" value="192.168.75.134" />  
                        <constructor-arg name="port" value="26381" />  
                    </bean>  
                </set>  
            </property>  
        </bean>  
         <!--  <bean id="redisConnectionFactory"  
            class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
            p:password="pwdisadmin"> -->
        <bean id="redisConnectionFactory"  
            class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
          >  
       
            <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"></constructor-arg>  
            <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>  
        </bean>  
        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
            <property name="connectionFactory" ref="redisConnectionFactory" />  
	         <property name="keySerializer">
				<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
			</property>
			<property name="hashKeySerializer">
				<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
				</property>
			<property name="valueSerializer">
		
			<bean
				class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
			</property>
			<property name="hashValueSerializer">
				<bean
					class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
			</property>
        </bean>  
    </beans>     